# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: commitmsgfmt

  matrix:
    # MinGW
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% --release
    )

before_deploy:
  - cargo build --target %TARGET% --release
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        strip target\${Env:TARGET}\release\${Env:CRATE_NAME}.exe
      }
  - ps: ci/before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: pkTQqSsM0aT1QFsuMOp2QX01gDQwJCQhYexxHtV8Vmc80PX0H6TOpgwUb8H/jxeQ
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

# The AppVeyor build version is useless; this serves to make it explicit.
#
# The "build version" has to be globally unique, which, in the face of retrying
# builds, is impossible to ensure without an atomic counter. AppVeyor provides
# such a counter via its "build number" but allows it to be reset. The easiest
# way to meet the requirement is to treat the build number as a monotonically
# increasing counter and never reset it. The build version provides immediate
# access to its result page, but since the version has to be unique the result
# page location cannot generally be inferred from a meaningfully traceable
# identifier, such as the package version, making direct access effectively
# impossible anyway. The build history page already includes branch, tag, and
# commit information, so adapting the build version to include that not only
# would not help, it would introduce ambiguity; and if it did help, there is no
# way to count the number of unique builds per version string, so either the
# build version would not be unique (and then AppVeyor reverts to the default
# setting) or the disambiguating value would be useless at best and misleading
# at worst.
#
# This is the only setting that is both internally consistent (does not lie
# about how many builds there have been) and is not misleading (cannot
# misrepresent the package version).
version: "{build}"

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
